// <auto-generated />
using System;
using HakuCommentViewer.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HakuCommentViewer.Common.Migrations
{
    [DbContext(typeof(HcvDbContext))]
    [Migration("20231112192541_AddStreamPageInfoToStreamInfo")]
    partial class AddStreamPageInfoToStreamInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.24");

            modelBuilder.Entity("HakuCommentViewer.Common.Models.CommentInfo", b =>
                {
                    b.Property<string>("StreamInfoId")
                        .HasColumnType("TEXT")
                        .HasComment("配信情報ID");

                    b.Property<string>("TimeStampUSec")
                        .HasColumnType("TEXT")
                        .HasComment("タイムススタンプ");

                    b.Property<string>("CommentId")
                        .HasColumnType("TEXT")
                        .HasComment("コメント識別用");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("コメント");

                    b.Property<string>("StreamManagementId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("配信管理番号()");

                    b.Property<string>("StreamSiteId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("配信サイトID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("ユーザーID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("ユーザー名");

                    b.HasKey("StreamInfoId", "TimeStampUSec", "CommentId");

                    b.ToTable("CommentInfos");

                    b.HasComment("コメント情報テーブル");
                });

            modelBuilder.Entity("HakuCommentViewer.Common.Models.GiftInfo", b =>
                {
                    b.Property<string>("StreamSiteId")
                        .HasColumnType("TEXT")
                        .HasComment("配信サイトID");

                    b.Property<string>("TimeStampUSec")
                        .HasColumnType("TEXT")
                        .HasComment("タイムススタンプ");

                    b.Property<string>("CommentId")
                        .HasColumnType("TEXT")
                        .HasComment("コメント識別用");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("コメント");

                    b.Property<string>("GiftType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("スパ茶・ギフト種別");

                    b.Property<int>("GiftValue")
                        .HasColumnType("INTEGER")
                        .HasComment("スパ茶・ギフト種別");

                    b.Property<string>("StreamInfoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreamManagementId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("配信管理ID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("ユーザーID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("ユーザー名");

                    b.HasKey("StreamSiteId", "TimeStampUSec", "CommentId");

                    b.ToTable("GiftInfos");

                    b.HasComment("スパ茶・ギフト情報テーブル");
                });

            modelBuilder.Entity("HakuCommentViewer.Common.Models.StreamInfo", b =>
                {
                    b.Property<string>("StreamId")
                        .HasColumnType("TEXT")
                        .HasComment("配信情報ID");

                    b.Property<int?>("CommentCount")
                        .HasColumnType("INTEGER")
                        .HasComment("コメント数");

                    b.Property<string>("CommentRoomId")
                        .HasColumnType("TEXT")
                        .HasComment("チャット(コメント)ルームID");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("TEXT")
                        .HasComment("配信終了日時");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT")
                        .HasComment("備考");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("TEXT")
                        .HasComment("配信開始日時");

                    b.Property<string>("StreamName")
                        .HasColumnType("TEXT")
                        .HasComment("配信名");

                    b.Property<string>("StreamPageId")
                        .HasColumnType("TEXT")
                        .HasComment("配信ID(配信サイト内ID)");

                    b.Property<string>("StreamSiteId")
                        .HasColumnType("TEXT")
                        .HasComment("配信サイトID");

                    b.Property<string>("StreamUrl")
                        .HasColumnType("TEXT")
                        .HasComment("配信URL");

                    b.Property<int?>("ViewerCount")
                        .HasColumnType("INTEGER")
                        .HasComment("視聴者数");

                    b.HasKey("StreamId");

                    b.ToTable("StreamInfos");

                    b.HasComment("配信情報管理テーブル");
                });

            modelBuilder.Entity("HakuCommentViewer.Common.Models.StreamManagementInfo", b =>
                {
                    b.Property<string>("StreamManagementId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("INTEGER")
                        .HasComment("接続済みフラグ");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT")
                        .HasComment("備考");

                    b.Property<string>("StreamId")
                        .HasColumnType("TEXT")
                        .HasComment("配信情報ID");

                    b.Property<int>("StreamNo")
                        .HasColumnType("TEXT")
                        .HasComment("配信管理番号(画面用)");

                    b.Property<bool>("UseCommentGenerator")
                        .HasColumnType("INTEGER")
                        .HasComment("コメントジェネレーター機能利用フラグ");

                    b.Property<bool>("UseNarrator")
                        .HasColumnType("INTEGER")
                        .HasComment("読上げ機能利用フラグ");

                    b.HasKey("StreamManagementId");

                    b.ToTable("StreamManagementInfos");

                    b.HasComment("配信管理情報管理テーブル");
                });

            modelBuilder.Entity("HakuCommentViewer.Common.Models.UserInfo", b =>
                {
                    b.Property<string>("StreamSiteId")
                        .HasColumnType("TEXT")
                        .HasComment("配信サイトID");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT")
                        .HasComment("ユーザーID");

                    b.Property<string>("IconPath")
                        .HasColumnType("TEXT")
                        .HasComment("アイコン配置先");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT")
                        .HasComment("備考");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("ユーザー名");

                    b.HasKey("StreamSiteId", "UserId");

                    b.ToTable("UserInfos");

                    b.HasComment("ユーザー情報管理テーブル");
                });
#pragma warning restore 612, 618
        }
    }
}
